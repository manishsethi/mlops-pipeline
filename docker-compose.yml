# docker-compose.yml
services:
  ml-api:
    build: .
    image: manishsethis/mlops-pipeline-ml-api:latest
    ports:
      - "5000:5000"
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
      - predictions-db-data:/app/data
    environment:
      - FLASK_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  retrain-service:
    build:
      context: .
      dockerfile: Dockerfile.retrain  # create this Dockerfile for retrain service
    ports:
      - "9000:9000"
    volumes:
      - ./scripts:/app/scripts  # if needed for retrain scripts
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/trigger-retraining"]
      interval: 30s
      timeout: 10s
      retries: 3

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage:
  predictions-db-data:
